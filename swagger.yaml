swagger: "2.0"
info:
  version: 1.0.0
  title: "pre-esame"
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /assignments:
    get:
      description: |
        Returns all assignments from the system that the user has access to
      operationId: findAssegnments
      responses:
        200:
          description: assignment response
          schema:
            type: array
            items:
              $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new assignment.  Duplicates are allowed
      operationId: addAssignment
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewAssignment'
      responses:
        200:
          description: pet response
          schema:
            $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: pet response
          schema:
            $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Assignment:
    allOf:
      - $ref: '#/definitions/NewAssignment'
      - required:
        - Assignment_Content
        - Assignment_Type
        properties:
          Assignment_Content:
            type: string
          Assignment_Type:
            type: string
  NewAssignment:
    required:
      - Assignment_ID
      - Student_ID
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string